name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test ./... -v

      - name: Lint (style, vulnerabilities, security)
        run: golangci-lint run --timeout 5m

      - name: License compliance (Permissive OSI licenses)
        run: |
          go install github.com/google/go-licenses@latest
          go-licenses check ./... --allowed_licenses=Apache-2.0,MIT,BSD-2-Clause,BSD-3-Clause,ISC

  version-bump:
    needs: build-test-lint
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Calculate next version
        run: |
          go build -o gitversion-go ./cmd/gitversion-go
          ./gitversion-go calculate > version.json
          cat version.json

      - name: Tag with calculated version (if needed)
        run: |
          VERSION=$(jq -r .FullSemVer version.json)
          TAG_EXISTS=$(git tag -l "$VERSION")
          if [ -z "$TAG_EXISTS" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag "$VERSION"
            git push origin "$VERSION"
            echo "Tagged repo with $VERSION"
          else
            echo "Tag $VERSION already exists. Skipping."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
